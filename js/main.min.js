"use strict";document.addEventListener("DOMContentLoaded",function(){var c=document.getElementById("quiz-wrapper"),a=document.querySelectorAll(".box"),t=document.getElementById("next"),n=document.getElementById("prev"),o=document.getElementById("submit"),l=(document.getElementById("progress"),document.getElementById("line-progress")),s=document.getElementById("steps"),i="Крутой и опытный комик,\n Чувствуешь на сцене как рыба в воде. Сможешь прожарить кого угодно, а фанаты всегда \n хотят сфоткаться после выступления.",r="Подающий надежды комик \n У тебя есть потенциал, который нужно раскрыть и проработать свой материал. Как \n говорится, «ребенок способный, но ленивый",u="Начинающий комик \n Чаще выступай на открытых микрофонах, смотри любимых комиков и выбери свой стиль \n комедии",d=0;function m(e){0===e?n.classList.add("out"):n.classList.remove("out"),3===e?t.classList.add("out"):t.classList.remove("out"),2<e?o.classList.remove("out"):o.classList.add("out")}function v(e,t,n){t="Новый клиент!\nИмя: ".concat(t,"\nТелефон: ").concat(e,"\nРезультат: ").concat(n),e="https://api.telegram.org/bot".concat("6778149008:AAF979_JEhX3LxlDMSXB0CJ02Afmqy-l41U","/sendMessage");fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({chat_id:"-1002114831243",text:t})}).then(function(e){return e.json()}).then(function(e){console.log("Уведомление отправлено в Telegram:",e),c.reset(),document.querySelectorAll('input[type="radio"]').forEach(function(e){e.parentElement.classList.remove("active")}),c.style.display="none",document.getElementById("result-frame").style.display="flex",d=0,l.style.width="".concat(25*(d+1),"%"),s.textContent="".concat(d+1,"/4"),a.forEach(function(e,t){e.classList.remove("active")}),a[d].classList.add("active"),m(d)}).catch(function(e){console.error("Ошибка отправки в Telegram:",e)})}function f(e,t,n){var c=document.getElementById("result-title"),a=document.getElementById("result-descr");document.getElementById("result-img").src="/images/".concat(n,".jpg"),c.textContent="Поздравляем ".concat(e),a.textContent="Вы ".concat(t)}c.addEventListener("click",function(e){var n=e.target;document.querySelectorAll('input[type="radio"]').forEach(function(e,t){e===n&&("q1"===e.name?(document.querySelectorAll('input[name="q1"]').forEach(function(e){e.parentElement.classList.remove("active")}),e.parentElement.classList.add("active")):"q2"===e.name?(document.querySelectorAll('input[name="q2"]').forEach(function(e){e.parentElement.classList.remove("active")}),e.parentElement.classList.add("active")):"q3"===e.name&&(document.querySelectorAll('input[name="q3"]').forEach(function(e){e.parentElement.classList.remove("active")}),e.parentElement.classList.add("active")))})}),t.addEventListener("click",function(){m(++d),l.style.width="".concat(25*(d+1),"%"),s.textContent="".concat(d+1,"/4"),a.forEach(function(e,t){e.classList.remove("active")}),a[d].classList.add("active")}),n.addEventListener("click",function(){m(--d),l.style.width="".concat(25*(d+1),"%"),s.textContent="".concat(d+1,"/4"),a.forEach(function(e,t){e.classList.remove("active")}),a[d].classList.add("active")}),m(d),o.addEventListener("click",function(){var e,t=document.getElementById("name"),n=document.getElementById("phone"),c=[],a=document.querySelectorAll('input[type="radio"]:checked');switch(3===a.length&&""!==t.value&&""!==n.value?(a.forEach(function(e){c.push(e.value)}),console.log(c),e=c.every(function(e,t,n){return n.indexOf(e)===t})?(a=1,e=3,Math.floor(Math.random()*(e-a+1))+a):function(e){var t,n={},c=(e.forEach(function(e){n[e]=(n[e]||0)+1}),null),a=0;for(t in n)a<n[t]&&(a=n[c=t]);return c}(c)):alert("Выберите ответы на все вопросы!"),+e){case 1:v(n.value,t.value,i),f(t.value,i,1);break;case 2:v(n.value,t.value,r),f(t.value,r,2);break;case 3:v(n.value,t.value,u),f(t.value,u,3)}}),document.getElementById("restart").addEventListener("click",function(){document.getElementById("result-frame").style.display="none",c.style.display="flex"})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
