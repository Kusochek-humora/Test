"use strict";function _createForOfIteratorHelper(e,t){var n,r,o,a,c="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(c)return r=!(n=!0),{s:function(){c=c.call(e)},n:function(){var e=c.next();return n=e.done,e},e:function(e){r=!0,o=e},f:function(){try{n||null==c.return||c.return()}finally{if(r)throw o}}};if(Array.isArray(e)||(c=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length)return c&&(e=c),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var n;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(n="Object"===(n=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}document.addEventListener("DOMContentLoaded",function(){var i=document.getElementById("form");function u(e,t,n){switch(e){case"Тимур":case"Тима":case"Вероника":case"Саша":case"Нуреке":case"Саныч":r(e,t,n);break;default:console.log("Недопустимое значение строки")}}function r(e,t,n){var r=document.getElementById("title-modal"),o=document.getElementById("img-modal"),r=(r.textContent=e,o.src="images/".concat(e,".jpg"),document.getElementById("overlay").style.display="flex","".concat(n.value)),o="".concat(t.value),n="".concat(e);o="Новый клиент!\nИмя: ".concat(o,"\nТелефон: ").concat(r,"\nЛюбимый комик: ").concat(n),r="https://api.telegram.org/bot".concat("6778149008:AAF979_JEhX3LxlDMSXB0CJ02Afmqy-l41U","/sendMessage"),fetch(r,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({chat_id:"-1002114831243",text:o})}).then(function(e){return e.json()}).then(function(e){console.log("Уведомление отправлено в Telegram:",e)}).catch(function(e){console.error("Ошибка отправки в Telegram:",e)}),i.reset()}document.getElementById("result").addEventListener("click",function(){var e,t=[],n=new FormData(i),r=document.getElementById("name"),o=document.getElementById("phone");if(3===document.querySelectorAll('input[type="radio"]:checked').length&&""!==r.value&&""!==o){var a,c=_createForOfIteratorHelper(n);try{for(c.s();!(a=c.n()).done;){var l=a.value;t.push(l[1])}}catch(e){c.e(e)}finally{c.f()}u(t.every(function(e,t,n){return n.indexOf(e)===t})?t[n=0,e=2,Math.floor(Math.random()*(e-n+1))+n]:function(e){var t,n={},r=(e.forEach(function(e){n[e]=(n[e]||0)+1}),null),o=0;for(t in n)o<n[t]&&(o=n[r=t]);return r}(t),r,o)}else alert("Заполните все поля")}),document.getElementById("close-btn").addEventListener("click",function(){document.getElementById("overlay").style.display="none"})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
